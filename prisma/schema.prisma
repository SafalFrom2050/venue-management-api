// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
    id  Int @id @default(autoincrement())

    firstName String?
    lastName String?

    phone String?
    email String @unique
    password String
    addressId Int?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("users")
}

model UserAddress {
    id  Int @id @default(autoincrement())

    country String?
    state String?
    city String?
    street String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("user_addresses")
}

model Admin {
    id  Int @id @default(autoincrement())

    firstName String?
    lastName String?

    phone String?
    email String @unique
    password String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("admins")
}

model Venue {
    id  Int @id @default(autoincrement())

    name String
    description String? @db.Text
    imageUrl String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("venues")
}

model Event {
    id  Int @id @default(autoincrement())

    title String
    details String? @db.Text
    imagePath String?
    photographer String?
    price String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("events")
}

model Feedback {
    id  Int @id @default(autoincrement())

    username String
    email String
    feedback String
    rating Int @default(5)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("feedbacks")
}

model Booking {
    id  Int @id @default(autoincrement())

    userId Int
    dateTime DateTime?
    event String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("bookings")
}

model Participation {
    id  Int @id @default(autoincrement())

    userId Int
    dateTime DateTime?
    event String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("participations")
}